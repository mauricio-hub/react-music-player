{"version":3,"sources":["data.js","components/LibrarySong.js","components/Library.js","components/Player.js","components/Song.js","components/Navbar.js","App.js","index.js"],"names":["chillHop","name","cover","artist","audio","color","id","uuidv4","active","LibrarySong","song","songs","setCurrentSong","audioRef","isPlaying","setSongs","songSelectHandler","a","selectedSong","filter","state","newSongs","map","current","play","onClick","className","src","alt","Library","libraryStatus","Player","currentSong","setIsPlaying","songInfo","setSongInfo","activeLibraryHandle","nextPrev","getTime","time","Math","floor","slice","skipTrackHandler","direction","currentIndex","findIndex","length","currentTime","min","max","duration","value","type","onChange","e","target","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","Navbar","setLibraryStatus","faMusic","App","useRef","useState","data","TimeUpdateHandler","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","ReactDOM","render","document","getElementById"],"mappings":"mPAmEeA,MAlEf,WACE,MAAO,CACL,CACEC,KAAM,eACNC,MACE,yGACFC,OAAQ,6BACRC,MAAO,gDACPC,MAAO,CAAC,UAAW,WACnBC,GAAIC,cACJC,QAAQ,GAEV,CACEP,KAAM,WACNC,MACE,yGACFC,OAAQ,WACRC,MAAO,+CACPC,MAAO,CAAC,UAAW,WACnBC,GAAIC,cACJC,QAAQ,GAEV,CACEP,KAAM,aACNC,MACE,yGACFC,OAAQ,WACRC,MAAO,+CACPC,MAAO,CAAC,UAAW,WACnBC,GAAIC,cACJC,QAAQ,GAEV,CACEP,KAAM,YACNC,MACE,yGACFC,OAAQ,WACRC,MAAO,+CACPC,MAAO,CAAC,UAAW,WACnBC,GAAIC,cACJC,QAAQ,GAEV,CACEP,KAAM,aACNC,MACE,yGACFC,OAAQ,WACRC,MAAO,+CACPC,MAAO,CAAC,UAAW,WACnBC,GAAIC,cACJC,QAAQ,GAEV,CACEP,KAAM,uBACNC,MACE,yGACFC,OAAQ,6BACRC,MAAO,gDACPC,MAAO,CAAC,UAAW,WACnBC,GAAIC,cACJC,QAAQ,KCRCC,EAjDK,SAAC,GAA8D,IAA7DC,EAA4D,EAA5DA,KAAKC,EAAuD,EAAvDA,MAAMC,EAAiD,EAAjDA,eAAeN,EAAkC,EAAlCA,GAAGO,EAA+B,EAA/BA,SAASC,EAAsB,EAAtBA,UAAUC,EAAY,EAAZA,SAE9DC,EAAiB,uCAAE,8BAAAC,EAAA,6DAClBC,EAAcP,EAAMQ,QAAO,SAACC,GAAD,OAASA,EAAMd,KAAKA,KAD7B,SAElBM,EAAeM,EAAa,IAFV,OAIlBG,EAAWV,EAAMW,KAAI,SAACZ,GAI3B,OAAGA,EAAKJ,KAAKA,EACZ,2BACII,GADJ,IAECF,QAAO,IAGR,2BACIE,GADJ,IAECF,QAAO,OAIXO,EAASM,GAELP,GACDD,EAASU,QAAQC,OAvBK,2CAAF,qDA+BxB,OAEC,sBAAKC,QAAST,EAAmBU,UAAS,uBAAkBhB,EAAKF,OAAQ,WAAW,IAApF,UACC,qBAAKmB,IAAKjB,EAAKR,MACf0B,IAAKlB,EAAKT,OACV,sBAAKyB,UAAU,mBAAf,UACA,6BAAKhB,EAAKT,OACV,6BAAKS,EAAKP,gBCnBE0B,EAvBC,SAAC,GAAsE,IAArElB,EAAoE,EAApEA,MAAMC,EAA8D,EAA9DA,eAAeC,EAA+C,EAA/CA,SAASC,EAAsC,EAAtCA,UAAUC,EAA4B,EAA5BA,SAASe,EAAmB,EAAnBA,cAClE,OACC,sBAAKJ,UAAS,kBAAaI,EAAgB,iBAAmB,IAA9D,UACA,yCACC,qBAAKJ,UAAU,gBAAf,SACEf,EAAMW,KAAI,SAAAZ,GAAI,OACd,cAAC,EAAD,CACAC,MAAOA,EACPC,eAAgBA,EAChBF,KAAMA,EACNJ,GAAII,EAAKJ,GAETO,SAAUA,EACVC,UAAWA,EACXC,SAAUA,GAHLL,EAAKJ,a,cCoHAyB,EA3HD,SAAC,GAAoG,IAAnGlB,EAAkG,EAAlGA,SAASmB,EAAyF,EAAzFA,YAAYlB,EAA6E,EAA7EA,UAAUmB,EAAmE,EAAnEA,aAAaC,EAAsD,EAAtDA,SAASC,EAA6C,EAA7CA,YAAYxB,EAAiC,EAAjCA,MAAMC,EAA2B,EAA3BA,eAAeG,EAAY,EAAZA,SAE/FqB,EAAoB,SAACC,GAC1B,IAAMhB,EAAWV,EAAMW,KAAI,SAACZ,GAI1B,OAAGA,EAAKJ,KAAK+B,EAAS/B,GACrB,2BACII,GADJ,IAECF,QAAO,IAGR,2BACIE,GADJ,IAECF,QAAO,OAIXO,EAASM,IAqBT,SAASiB,EAAQC,GACf,OACEC,KAAKC,MAAMF,EAAO,IAAM,KAAO,IAAMC,KAAKC,MAAMF,EAAO,KAAKG,OAAO,GAMvE,IAAMC,EAAgB,uCAAC,WAAOC,GAAP,eAAA3B,EAAA,yDAElB4B,EAAelC,EAAMmC,WAAU,SAACpC,GAAD,OAAQA,EAAKJ,KAAK0B,EAAY1B,MAClD,iBAAZsC,EAHmB,gCAMfhC,EAAeD,GAAOkC,EAAa,GAAKlC,EAAMoC,SAN/B,OAOrBX,EAAoBzB,GAAOkC,EAAa,GAAKlC,EAAMoC,SAP9B,UAQN,cAAZH,EARkB,qBAShBC,EAAa,GAAGlC,EAAMoC,UAAU,EAThB,iCAUdnC,EAAeD,EAAMA,EAAMoC,OAAO,IAVpB,cAWpBX,EAAoBzB,EAAMA,EAAMoC,OAAO,IACnCjC,GACJD,EAASU,QAAQC,OAbG,4CAiBfZ,EAAeD,GAAOkC,EAAa,GAAKlC,EAAMoC,SAjB/B,QAkBrBX,EAAoBzB,GAAOkC,EAAa,GAAKlC,EAAMoC,SAlB9B,QAoBlBjC,GACHD,EAASU,QAAQC,OArBI,4CAAD,sDA4BvB,OAEC,sBAAKE,UAAU,SAAf,UACC,sBAAKA,UAAU,eAAf,UACC,4BACCY,EAAQJ,EAASc,eAElB,uBACAC,IAAK,EACLC,IAAKhB,EAASiB,UAAY,EAC1BC,MAAOlB,EAASc,YAChBK,KAAK,QACLC,SAvDgB,SAACC,GACnB1C,EAASU,QAAQyB,YAAaO,EAAEC,OAAOJ,MACvCjB,EAAY,2BAAID,GAAL,IAAcc,YAAYO,EAAEC,OAAOJ,YAwD5C,4BAAIlB,EAASiB,SAAWb,EAAQJ,EAASiB,UAAU,YAIpD,sBAAKzB,UAAU,eAAf,UAOC,cAAC,IAAD,CACAD,QAAS,kBAAIkB,EAAiB,cAC9BjB,UAAU,YACV+B,KAAK,KACLC,KAAMC,MACN,cAAC,IAAD,CAAiBlC,QArFE,WAClBX,GACFD,EAASU,QAAQqC,QAEjB3B,GAAcnB,KAEdD,EAASU,QAAQC,OACjBS,GAAcnB,KA8E8BY,UAAU,OAAO+B,KAAK,KAAIC,KAAO5C,EAAqB+C,IAATC,MACxF,cAAC,IAAD,CACArC,QAAS,kBAAIkB,EAAiB,iBAC9BjB,UAAU,eACV+B,KAAK,KACLC,KAAMK,aCpGKC,EAdF,SAAC,GAAiB,IAAhBhC,EAAe,EAAfA,YACd,OAEC,sBAAKN,UAAU,iBAAf,UACC,qBAAKC,IAAKK,EAAY9B,MACtB0B,IAAKI,EAAY/B,OACjB,6BAAK+B,EAAY/B,OACjB,6BAAK+B,EAAY7B,aCML8D,EAbD,SAAC,GAAoC,IAAnCnC,EAAkC,EAAlCA,cAAcoC,EAAoB,EAApBA,iBAC7B,OACE,gCACC,oDACA,yBAAQzC,QAAS,kBAAKyC,GAAkBpC,IAAxC,oBAEC,cAAC,IAAD,CAAiB4B,KAAMS,aC+EbC,EAhFF,WAGZ,IAAMvD,EAAWwD,iBAAO,MAHN,EAOOC,mBAASC,KAPhB,mBAOX5D,EAPW,KAOLI,EAPK,OASiBuD,mBAAS3D,EAAM,IAThC,mBASXqB,EATW,KASCpB,EATD,OAWe0D,oBAAS,GAXxB,mBAWXxD,EAXW,KAWDmB,EAXC,OAeYqC,mBAAS,CACtCtC,YAAY,EACZmB,SAAS,IAjBQ,mBAeZjB,EAfY,KAeHC,EAfG,OAoBqBmC,oBAAS,GApB9B,mBAoBXxC,EApBW,KAoBGoC,EApBH,KAqBZM,EAAmB,SAACjB,GAEzB,IAAMhC,EAAUgC,EAAEC,OAAOR,YAGnBG,EAAWI,EAAEC,OAAOL,SAI1BhB,EAAY,2BAAID,GAAL,IAAcc,YAAYzB,EAAQ4B,eAGxCsB,EAAc,uCAAE,4BAAAxD,EAAA,6DAIhB4B,EAAelC,EAAMmC,WAAU,SAACpC,GAAD,OAAQA,EAAKJ,KAAK0B,EAAY1B,MAJ7C,SAKdM,EAAeD,GAAOkC,EAAa,GAAKlC,EAAMoC,SALhC,OAMjBjC,GAAUD,EAASU,QAAQC,OANV,2CAAF,qDAUnB,OAGC,sBAAKE,UAAS,cAASI,EAAgB,iBAAkB,IAAzD,UACA,cAAC,EAAD,CAAQA,cAAeA,EAAeoC,iBAAkBA,IAC1D,cAAC,EAAD,CAAMlC,YAAaA,IACnB,cAAC,EAAD,CACAnB,SAAUA,EACVC,UAAWA,EACXmB,aAAcA,EACdD,YAAaA,EACbG,YAAaA,EACbD,SAAUA,EACVvB,MAAOA,EACPC,eAAgBA,EAChBG,SAAUA,IAEV,cAAC,EAAD,CACAe,cAAeA,EACfjB,SAAUA,EACVF,MAAOA,EACPC,eAAgBA,EAChBE,UAAWA,EACXC,SAAUA,IAEV,uBACE2D,aAAcF,EACdG,iBAAkBH,EAClBI,IAAK/D,EACLc,IAAKK,EAAY5B,MACjByE,QAASJ,QC7EZK,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,W","file":"static/js/main.1d70b107.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n  ];\n}\n\nexport default chillHop;\n","import React from 'react'\r\n//import {playAudio} from '../util'\r\n//este componente muestra los datos\r\n//de las canciones\r\n const LibrarySong =({song,songs,setCurrentSong,id,audioRef,isPlaying,setSongs})=>{\r\n\r\n \tconst songSelectHandler =async()=>{\r\n \t\tconst selectedSong= songs.filter((state)=>state.id===id)\r\n \t\tawait setCurrentSong(selectedSong[0])\r\n \t\t//añadiendo active state\r\n \t\tconst newSongs = songs.map((song)=>{\r\n \t\t\t//id es la cancion que se le hace click\r\n \t\t\t//song.id es la cancion del estado\r\n \t\t\t//si coinciden cambiael estado a true\r\n \t\t\tif(song.id===id){\r\n \t\t\t\treturn{\r\n \t\t\t\t\t...song,\r\n \t\t\t\t\tactive:true,\r\n \t\t\t\t}\r\n \t\t\t}else{\r\n \t\t\t\treturn{\r\n \t\t\t\t\t...song,\r\n \t\t\t\t\tactive:false,\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t})\r\n \tsetSongs(newSongs);\r\n\r\n \tif (isPlaying) {\r\n  \t\t\taudioRef.current.play();\r\n  \t\t\t}\r\n \t\r\n \t}\r\n\r\n\r\n\r\n\r\n\treturn(\r\n\r\n\t\t<div onClick={songSelectHandler} className={`library-song ${song.active ?'selected':\"\"}`}>\r\n\t\t\t<img src={song.cover}\r\n\t\t\talt={song.name}></img>\r\n\t\t\t<div className=\"song-description\">\r\n\t\t\t<h3>{song.name}</h3>\r\n\t\t\t<h4>{song.artist}</h4>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\t\r\n\r\n\r\n\t\t)\r\n} \r\n\r\nexport default LibrarySong;","import React from 'react'\r\nimport LibrarySong from './LibrarySong'\r\nconst Library = ({songs,setCurrentSong,audioRef,isPlaying,setSongs,libraryStatus}) => {\r\n\treturn (\r\n\t\t<div className={`library ${libraryStatus ? 'active-library' : \"\"}`}>\r\n\t\t<h2>Library</h2>\r\n\t\t\t<div className=\"library-songs\">\r\n\t\t\t\t{songs.map(song=>(\r\n\t\t\t\t\t<LibrarySong \r\n\t\t\t\t\tsongs={songs}\r\n\t\t\t\t\tsetCurrentSong={setCurrentSong}\r\n\t\t\t\t\tsong={song}\r\n\t\t\t\t\tid={song.id}\r\n\t\t\t\t\tkey={song.id}\r\n\t\t\t\t\taudioRef={audioRef}\r\n\t\t\t\t\tisPlaying={isPlaying}\r\n\t\t\t\t\tsetSongs={setSongs}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t</div>\t\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Library","import React,{useState} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faPlay,faAngleLeft,faAngleRight,faPause} from \"@fortawesome/free-solid-svg-icons\"\r\n//import {playAudio} from '../util'\r\n//componente que \r\n//muestra iconos de play y la barra de progreso de la cancion \r\nconst Player =({audioRef,currentSong,isPlaying,setIsPlaying,songInfo,setSongInfo,songs,setCurrentSong,setSongs})=>{\r\n\t\r\n\tconst activeLibraryHandle=(nextPrev)=>{\r\n\t\tconst newSongs = songs.map((song)=>{\r\n \t\t\t//id es la cancion que se le hace click\r\n \t\t\t//song.id es la cancion del estado\r\n \t\t\t//si coinciden cambiael estado a true\r\n \t\t\tif(song.id===nextPrev.id){\r\n \t\t\t\treturn{\r\n \t\t\t\t\t...song,\r\n \t\t\t\t\tactive:true,\r\n \t\t\t\t}\r\n \t\t\t}else{\r\n \t\t\t\treturn{\r\n \t\t\t\t\t...song,\r\n \t\t\t\t\tactive:false,\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t})\r\n \tsetSongs(newSongs)\t\r\n\t}\r\n\r\n\tconst playSongHandler=()=>{\r\n\t\tif(isPlaying){\r\n\t\t\taudioRef.current.pause();\r\n\t\t\t//cambiamos el estado isPlaying para pausar \r\n\t\t\tsetIsPlaying(!isPlaying)\r\n\t\t}else{\r\n\t\t\taudioRef.current.play();\r\n\t\t\tsetIsPlaying(!isPlaying)\r\n\t\t}\r\n\t}\r\n\t//funcion para arrastrar barra de progreso de la cancion\r\n\tconst dragHandler =(e)=>{\r\n\t\taudioRef.current.currentTime =e.target.value\r\n\t\tsetSongInfo({...songInfo,currentTime:e.target.value})\r\n\t}\r\n\t\r\n\r\n\t//funcion para tranformar el formato de tiempo \r\n\t function getTime(time) {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n\r\n  //funcion para cambiar de cancion\r\n\r\n  const skipTrackHandler=async (direction)=>{\r\n  \t//tomamos el indice de la cancion actual \r\n  \tlet currentIndex = songs.findIndex((song)=>song.id===currentSong.id);\r\n  \tif(direction===\"skip-forward\"){\r\n  \t\t//aqui incrementamos el indice sumando 1 \r\n  \t\t//(% modulo) si  currentIndex igual a songs.length regresa a 0\r\n  \t\tawait setCurrentSong(songs[(currentIndex+1) % songs.length])\r\n  \t\tactiveLibraryHandle(songs[(currentIndex+1) % songs.length])\r\n  \t}if(direction===\"skip-back\"){\r\n  \t\tif ((currentIndex-1)%songs.length===-1) {\r\n  \t\t\tawait setCurrentSong(songs[songs.length-1]);\r\n  \t\t\tactiveLibraryHandle(songs[songs.length-1])\r\n  \t\t\tif (isPlaying) {\r\n  \t\t\taudioRef.current.play();\r\n  \t\t\t}\r\n  \t\t\treturn;\r\n  \t\t}\r\n  \t\tawait setCurrentSong(songs[(currentIndex-1) % songs.length])\r\n  \t\tactiveLibraryHandle(songs[(currentIndex-1) % songs.length])\r\n  \t}\r\n  \tif (isPlaying) {\r\n  \t\taudioRef.current.play();\r\n  \t}\r\n\r\n\r\n  }\r\n\r\n\r\n\treturn(\r\n\r\n\t\t<div className=\"player\">\r\n\t\t\t<div className=\"time-control\">\r\n\t\t\t\t<p>{\r\n\t\t\t\t\tgetTime(songInfo.currentTime)\r\n\t\t\t\t\t}</p>\r\n\t\t\t\t<input\r\n\t\t\t\tmin={0}\r\n\t\t\t\tmax={songInfo.duration || 0}\r\n\t\t\t\tvalue={songInfo.currentTime}\r\n\t\t\t\ttype=\"range\"\r\n\t\t\t\tonChange={dragHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t<p>{songInfo.duration ? getTime(songInfo.duration):\"0:00\"}</p>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"play-control\">\r\n\t\t\t\r\n\t\t\t{/*iconos del reproductor\r\n\t\t\tllamamos al componenter FontAwesomeIcon\r\n\t\t\ty le pasamos en el props faPlay\r\n\t\t\t*/}\r\n\r\n\t\t\t\t<FontAwesomeIcon \r\n\t\t\t\tonClick={()=>skipTrackHandler(\"skip-back\")}\r\n\t\t\t\tclassName=\"skip-back\"\r\n\t\t\t\tsize=\"2x\" \r\n\t\t\t\ticon={faAngleLeft}/>\r\n\t\t\t\t<FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\"icon={!isPlaying ? faPlay : faPause}/>\r\n\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\tonClick={()=>skipTrackHandler(\"skip-forward\")}\r\n\t\t\t\tclassName=\"skip-forward\"\r\n\t\t\t\tsize=\"2x\"\r\n\t\t\t\ticon={faAngleRight}/>\r\n\r\n\t\t\t</div>\r\n\t\t\t\r\n\r\n\t\t</div>\t\r\n\r\n\r\n\t\t)\r\n} \r\n\r\nexport default Player","import React from 'react'\r\n\r\n//este componente muestra los datos\r\n//de las cancion reprduciendoce\r\n const Song =({currentSong})=>{\r\n\treturn(\r\n\r\n\t\t<div className=\"song-container\">\r\n\t\t\t<img src={currentSong.cover}\r\n\t\t\talt={currentSong.name}></img>\r\n\t\t\t<h2>{currentSong.name}</h2>\r\n\t\t\t<h3>{currentSong.artist}</h3>\r\n\t\t</div>\t\r\n\r\n\r\n\t\t)\r\n} \r\n\r\nexport default Song;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faMusic} from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst Navbar =({libraryStatus,setLibraryStatus})=>{\r\n\treturn(\r\n\t\t\t<nav>\r\n\t\t\t\t<h1>React Music Player</h1>\r\n\t\t\t\t<button onClick={()=> setLibraryStatus(!libraryStatus) }>\r\n\t\t\t\t\tLibrary\r\n\t\t\t\t\t<FontAwesomeIcon icon={faMusic}/>\r\n\t\t\t\t</button>\r\n\t\t\t</nav>\t\r\n\r\n\t\t)\r\n}\r\n\r\nexport default Navbar;\r\n","import React,{useState,useRef} from 'react'\nimport './styles/app.scss'\nimport data from './data'\n//agregando componentes\nimport Library from './components/Library'\nimport Player from './components/Player'\nimport Song from './components/Song'\nimport Navbar from './components/Navbar'\n\n const App = () => {\n\n \t//useRef se uso para tomar de referencia una etiqueta html \n\tconst audioRef = useRef(null)\n\n\n \t//agregando el estado general\n\tconst [songs,setSongs] = useState(data())\n\t//agregando el estado en el que inicia la app\t\n\tconst [currentSong,setCurrentSong]=useState(songs[0])\n\t//estado para pausar \n\tconst [isPlaying,setIsPlaying] = useState(false)\n\n\t//State para barra de progreso\n\n\tconst[songInfo,setSongInfo] = useState({\n\t\tcurrentSong:0,\n\t\tduration:0,\n\t})\n\t//estado de libreria\n\tconst [libraryStatus,setLibraryStatus]=useState(false)\n\tconst TimeUpdateHandler =(e)=>{\n\t\t//acedemos a tomar el tiempo real \n\t\tconst current = e.target.currentTime\n\t\t\n\t\t//acedemos al tiempo total de la cancion\n\t\tconst duration = e.target.duration\n\t\t//console.log(current)\n\t\t//con esto el estado se actualiza con el transcurso de la cancion\n\n\t\tsetSongInfo({...songInfo,currentTime:current,duration})\n\t}\n\n\tconst songEndHandler =async()=>{\n\t\t//funcion para que alfinal de la cancion cambie a la siguiente \n\t\t//y automaticamente este en play\n\t\t\t//tomamos el indice de la cancion actual \n  \tlet currentIndex = songs.findIndex((song)=>song.id===currentSong.id);\n  \tawait setCurrentSong(songs[(currentIndex+1) % songs.length])\n  \tif(isPlaying)audioRef.current.play();\n\t}\n\n\n  return (\n\n\n  \t<div className={`App ${libraryStatus ? \"library-active\": \"\"}`}>\n  \t<Navbar libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus}/>\n\t<Song currentSong={currentSong}/>\n\t<Player\n\taudioRef={audioRef} \n\tisPlaying={isPlaying}\n\tsetIsPlaying={setIsPlaying}\n\tcurrentSong={currentSong}\n\tsetSongInfo={setSongInfo}\n\tsongInfo={songInfo}\n\tsongs={songs}\n\tsetCurrentSong={setCurrentSong}\n\tsetSongs={setSongs}\n\t/>\n\t<Library\n\tlibraryStatus={libraryStatus}  \n\taudioRef={audioRef}\n\tsongs={songs}\n\tsetCurrentSong={setCurrentSong}\n\tisPlaying={isPlaying}\n\tsetSongs={setSongs}\n\t/> \n\t<audio\n\t\t\tonTimeUpdate={TimeUpdateHandler}\n\t\t\tonLoadedMetadata={TimeUpdateHandler} \n\t\t\tref={audioRef} \n\t\t\tsrc={currentSong.audio}\n\t\t\tonEnded={songEndHandler}\n\t\t\t>\n\t</audio>\n\t</div>\n  )\n}\n\nexport default App \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}